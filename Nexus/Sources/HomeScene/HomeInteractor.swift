//
//  HomeInteractor.swift
//  GhostVPN
//
//  Created by Владислав on 30.11.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation
import VPNManager
import LocationService

// MARK: - NetworkError
enum NetworkError: Error {
    case invalidURL
    case noData
}

protocol HomeBusinessLogic {
    func connectToVPN()
    func disconnectFromVPN()
}

protocol HomeDataStore {
    //var name: String { get set }
}

final class HomeInteractor: HomeBusinessLogic, HomeDataStore {
    
    var presenter: HomePresentationLogic?

    private let vpnManager: VPNManagerProtocol
    private let locationService: LocationService
    
    init(vpnManager: VPNManagerProtocol, locationService: LocationService) {
        self.vpnManager = vpnManager
        self.locationService = locationService
    }
    
    func connectToVPN() {
        presenter?.connectionState(.loading)
        vpnManager.connectToVPN(
            .init(
                username: "",
                serverAddress: ""
            )
        ) { [weak self] error in
            guard let self else { return }
            switch error {
            case .some(let error):
                presenter?.connectionState(.error(error))
            case .none:
                presenter?.connectionState(.success)
            }
        }
    }
    
    func disconnectFromVPN() {
        vpnManager.disconnectFromVPN()
    }
    
}
