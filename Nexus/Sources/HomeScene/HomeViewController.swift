//
//  HomeViewController.swift
//  GhostVPN
//
//  Created by Владислав on 30.11.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeView: UIView {
    var actionButton: UIButton { get }
    var connectionStateLabel: UILabel { get }
    var iconNameImageView: UIImageView { get }
    var titleServerLabel: UILabel { get }
    var ipAdressLabel: UILabel { get }
    var pingLabel: UILabel { get }
    var timerLabel: UILabel { get }
}

protocol HomeDisplayLogic: AnyObject {
    func displayHomeData(_ viewModel: HomeViewModel)
}

public final class HomeViewController: UIViewController {
    var interactor: HomeBusinessLogic?
    
    //MARK: - UI
    
    private let connectionStateLabel = UILabel()
    private let iconNameImageView = UIImageView()
    private let titleServerLabel = UILabel()
    private let ipAdressLabel = UILabel()
    private let pingLabel = UILabel()
    private let timerLabel = UILabel()
    
    
    //MARK: - init(_:)
    init() {
        super.init(nibName: nil, bundle: nil)
    }
    
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    //MARK: - Life cycle
    public override func loadView() {
        //        view = Твой Кастомный View
    }
    
    public override func viewDidLoad() {
        super.viewDidLoad()
        
        interactor?.connectToVPN()
        interactor?.disconnectFromVPN()
    }
    
    public override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        interactor?.viewDidAppear()
    }
    
}

// MARK: HomeDisplayLogic
extension HomeViewController: HomeDisplayLogic {
    func displayHomeData(_ viewModel: HomeViewModel) {
           connectionStateLabel.text = viewModel.connectionState
           timerLabel.text = viewModel.connectionTime
           
           if let serverViewModel = viewModel.serverInfo {
               iconNameImageView.image = UIImage(named: serverViewModel.iconName)
               titleServerLabel.text = serverViewModel.title
               ipAdressLabel.text = serverViewModel.ipAdress
               pingLabel.text = serverViewModel.ping
           }

           if let errorMessage = viewModel.errorMessage {
               showAlert(withTitle: "Ошибка", message: errorMessage)
           }
       }

       private func showAlert(withTitle title: String, message: String) {
           let alert = UIAlertController(title: title, message: message, preferredStyle: .alert)
           alert.addAction(UIAlertAction(title: "OK", style: .default, handler: nil))
           present(alert, animated: true)
       }
}

private extension HomeViewController {
    func foo() {
        interactor?.connectToVPN()
    }
}
